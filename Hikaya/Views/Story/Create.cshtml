@using Hikaya.Resources
@using Hikaya.DAL
@model Hikaya.DAL.Story

@{
    ViewBag.Title = "Create";
}

<h2>@StoryResources.Create</h2>


@using (Html.BeginForm(actionName: "Create",
                        controllerName: "Story",
                        method: FormMethod.Post,
                        htmlAttributes: "onsubmit = onFormSubmit(), " +
                                         "@class = 'form-horizontal'," +
                                         "enctype='multipart/form-data'"
                        )
        )
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@StoryResources.Story</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, StoryResources.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tags, StoryResources.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <!- ~~~~~~~~Story plot~~~~~~~ ->
    
    
    <div class="story-plot">
        <h4>@StoryResources.StoryPlot</h4>
        @{
            
            StoryPlot storyPlot = Model.StoryPlots.ElementAt(0);
            
                <div class="story-plot-item">
                    <!--Story Plot Text-->
                    <div class="form-group">
                        @Html.Label(StoryResources.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextArea("StoryPlots[0].Text", "", new { @class = "form-control col-md-10 story-plot-text" })
                        </div>
                    </div>
                    <!--Story Plot Image-->
                    <div class="form-group">
                        @Html.Label(StoryResources.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" name="files" class="story-plot-image" />
                        </div>
                    </div>

                    <!-- Story Plot Sort number-->
                    <div class="form-group">
                        @Html.Label(StoryResources.Sort, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBox("StoryPlots[0].Sort", "", new { @class = "form-control col-md-10 story-plot-sort" })
                        </div>
                    </div>
                </div>
        }

    </div>

    <!--             + Button             -->

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button onclick="AddStoryPlot()" class="btn btn-default">+</button>
        </div>
    </div>
</div>

    <!--         Create Story Button         -->

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@StoryResources.Create" class="btn btn-default" />
        </div>
    </div>
    }




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    function AddStoryPlot() {
        var storyPlotItem = $('.story-plot').children()[1];
        var newItem = $(storyPlotItem).clone(true);
        newItem.children().each(function () {
            //نتأكد من أن العنصر هو حقل إدخال
            if (!$(this).undefined) {
                //إفراغ الحقول من أي قيمة قد تحملها
                $(this).find('.story-plot-text').val('').end();
                $(this).find('.story-plot-image').val('').end();
                $(this).find('.story-plot-sort').val('').end();
            }
        });
        newItem.appendTo('.story-plot');
        event.preventDefault();
        return false;
    }
    function renameFieldsId(itemFields)
    {
        var indexReplaceFunction = function (j) {
            var name = $(this).attr("name");
            var newName = name.substring(0, name.indexOf("[") + 1) + j + name.substring(name.indexOf("]"));
            $(this).attr("name", newName);
        };

        for (var i = 0; i < itemFields.length; i++) {
            $("." + itemFields[i]).each(indexReplaceFunction);
        }
    }

    function onFormSubmit()
    {
        var fields = ["story-plot-text", "story-plot-sort"];
        renameFieldsId(fields);
    }
</script>
